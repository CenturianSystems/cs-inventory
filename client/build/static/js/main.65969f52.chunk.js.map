{"version":3,"sources":["assets/cs-logo.png","components/Landing.js","components/Home.js","containers/EditProductsPage.js","containers/ProductsPage.js","utils/setAuthToken.js","actions/types.js","actions/authActions.js","components/Navbar.js","containers/AddProductsPage.js","containers/EditSalesPage.js","containers/SalesPage.js","containers/AddSalesPage.js","containers/EditPurchasesPage.js","containers/PurchasesPage.js","containers/AddPurchasesPage.js","components/auth/Register.js","components/auth/Login.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/index.js","store.js","components/private-route/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["Landing","history","useHistory","Container","style","width","marginTop","Row","textAlign","display","Button","float","onClick","push","connect","state","auth","props","isAuthenticated","user","name","Image","src","logo","margin","fluid","rounded","EditProductsPage","useState","product","setProduct","useEffect","a","Axios","get","location","pathname","then","res","data","fetchProductInfo","today","Date","now","DOR","dateOfRecieve","DOI","dateOfInvoice","dateDOI","getDate","monthDOI","getMonth","yearDOI","getFullYear","dateDOR","monthDOR","yearDOR","handleFormChange","e","updatedAt","target","value","className","goBack","paddingBottom","Form","onSubmit","event","preventDefault","put","_id","store","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","catch","console","log","padding","borderRadius","border","Group","as","Col","controlId","Label","Control","onChange","placeholder","quantity","min","vendorName","invoiceNumber","price","variant","products","setProducts","axios","response","fetchProducts","sumQty","sumPrice","marginBottom","Table","striped","responsive","bordered","hover","colSpan","length","map","item","index","color","cursor","productId","filter","pdct","confirmAlert","buttons","label","delete","newProducts","handleProductDelete","setAuthToken","token","defaults","headers","common","GET_ERRORS","USER_LOADING","SET_CURRENT_USER","setCurrentUser","decoded","payload","logout","localStorage","removeItem","window","href","Navbar","bg","sticky","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","disabled","DropdownButton","rootCloseEvent","menuAlign","lg","size","Dropdown","ItemText","Divider","Item","alert","initialData","Object","freeze","formData","setFormData","post","EditSalesPage","sale","setSale","fetchSaleInfo","DOS","dateOfSale","dateDOS","monthDOS","yearDOS","productName","customerName","customerContact","salesPrice","sales","setSales","fetchSales","Number","totalBill","saleId","dropDownOptions","isClearable","options","EditPurchasesPage","purchase","setPurchase","fetchPurchaseInfo","dateOfPurchase","purchasesPrice","purchases","setPurchases","fetchPurchases","purchaseId","Register","email","password","password2","errors","registerForm","setRegisterForm","newUser","registerUser","classnames","invalid","Text","paddingLeft","to","propsTypes","PropTypes","func","isRequired","object","userData","dispatch","err","withRouter","loginUser","setItem","jwt_decode","errorTitle","errorMessage","emailnotfound","passwordincorrect","loginForm","setLoginForm","isEmpty","require","initialState","loading","combineReducers","action","types","middleware","thunk","createStore","rootReducer","applyMiddleware","Component","component","rest","render","jwtToken","currentTime","exp","App","exact","path","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65969f52.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cs-logo.48c4cccd.png\";","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from 'react-bootstrap/Button'\nimport Container from \"react-bootstrap/esm/Container\";\nimport Row from 'react-bootstrap/Row';\n\nconst Landing = () => {\n  const history = useHistory()\n  \n  const goToRegister = () => {\n    history.push('/register');\n  }\n\n  const goToLogin = () => {\n    history.push('/login');\n  }\n\n    return (\n      <Container style={{width: 250, marginTop: 20}}>\n        <Row style={{textAlign: 'center', display: 'block'}}>\n          <Button style={{float: 'left'}} onClick={goToRegister}>Register</Button>\n          <Button style={{float: 'right'}} onClick={goToLogin}>Login</Button>\n        </Row>\n      </Container>\n    );\n}\nexport default Landing;","import React from 'react'\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport logo from '../assets/cs-logo.png';\nimport Landing from './Landing'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\n\nfunction Home(props) {\n    return (\n        <div>\n            <Container>\n                <h1 style={{textAlign: \"center\", marginTop: 20}}>\n                    Welcome to Centurian Systems\n                </h1>\n                {\n                    props.auth.isAuthenticated \n                    ? <div>\n                        <h1 style={{textAlign: 'center'}}>\n                            Hey {props.auth.user.name} 👋\n                        </h1>\n                        <Image src={logo} style={{margin: '0 auto', display: 'block', marginTop: 20}} fluid rounded />\n                    </div>\n                    : <Landing />\n                }\n            </Container>\n        </div>\n    )\n}\n\nHome.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n  \nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Home)\n\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport './container.css'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Axios from 'axios';\nimport { FaArrowLeft } from 'react-icons/fa'\nimport { store } from 'react-notifications-component';\n\nconst EditProductsPage = () => {\n    const history = useHistory()\n    const [product, setProduct] = useState({})\n    useEffect(() => {\n        const fetchProductInfo = async () => {\n            Axios.get(history.location.pathname)\n            .then(res => {\n                setProduct(res.data)\n            })\n        }\n        fetchProductInfo();\n    }, [history.location.pathname])\n    const today = Date.now();\n    const DOR = new Date(product.dateOfRecieve)\n    const DOI = new Date(product.dateOfInvoice)\n    \n    // Breaking Date for show during edit\n    const dateDOI = DOI.getDate()\n    const monthDOI = DOI.getMonth()\n    const yearDOI = DOI.getFullYear()\n\n    const dateDOR = DOR.getDate()\n    const monthDOR = DOR.getMonth()\n    const yearDOR = DOR.getFullYear()\n\n    const handleFormChange = (e, updatedAt) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        setProduct({\n            ...product,\n            [name]: value\n        })\n    }\n\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n        Axios.put(`/products/${product._id}`, { data: product })\n        .then(() => {\n            store.addNotification({\n                title: \"Product Updated\",\n                message: product.title + \" has been successfully updated.\",\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-right\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n            });\n            history.push('/products')\n        })\n        .catch(e => {\n            console.log(e)\n        })\n    }\n\n    return (\n        <div>\n            <Container>\n                <h1 className=\"pageTitle\">\n                    <Button style={{float: \"left\", marginTop: 10}} onClick={() => history.goBack()}>\n                       <FaArrowLeft style={{paddingBottom: 2}} /> Back\n                    </Button>\n                    Edit Product\n                </h1>\n            \n                <Form onSubmit={handleFormSubmit} style={{\n                    marginTop: 20,\n                    padding: 20,\n                    borderRadius: 10,\n                    border: '1px solid gray'\n                }}>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"itemName\">\n                            <Form.Label>Item Name</Form.Label>\n                            <Form.Control name=\"title\" onChange={handleFormChange} type=\"text\" value={product.title} placeholder=\"Enter Item Name\" />\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"formGridPassword\">\n                            <Form.Label>Quantity</Form.Label>\n                            <Form.Control name=\"quantity\" onChange={handleFormChange} type=\"number\" value={product.quantity} min=\"0\" placeholder=\"Enter Item Quantity\" />\n                        </Form.Group>\n                    </Form.Row>\n                    \n                    <Form.Group controlId=\"formGridAddress1\">\n                        <Form.Label>Vendor Name</Form.Label>\n                        <Form.Control name=\"vendorName\" value={product.vendorName} onChange={handleFormChange}   placeholder=\"E.g: Hikvision\" />\n                    </Form.Group>\n                    \n                    <Form.Group controlId=\"formGridAddress2\">\n                        <Form.Label>Invoice Number</Form.Label>\n                        <Form.Control name=\"invoiceNumber\" value={product.invoiceNumber} onChange={handleFormChange} placeholder=\"Enter the Invoice Number\" />\n                    </Form.Group>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridCity\">\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control name=\"price\" value={product.price} onChange={handleFormChange} placeholder=\"Enter the price of the item\"/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridState\">\n                            <Form.Label>Date of Recieve</Form.Label>\n                            <Form.Control name=\"dateOfRecieve\" value={`${yearDOR}-${monthDOR}-${dateDOR}`} onChange={handleFormChange} type=\"date\" min={today} />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridZip\">\n                            <Form.Label>Date of Invoice</Form.Label>\n                            <Form.Control name=\"dateOfInvoice\" value={`${yearDOI}-${monthDOI}-${dateDOI}`} onChange={handleFormChange} type=\"date\" min={today} />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Update\n                    </Button>\n                </Form>\n            </Container>\n        </div>\n    )\n}\n\nexport default EditProductsPage\n        ","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\nimport axios from 'axios'\nimport './container.css'\nimport Button from 'react-bootstrap/esm/Button';\nimport { FaPlus, FaEdit, FaTrashAlt } from 'react-icons/fa'\nimport Axios from 'axios';\nimport EditProductsPage from './EditProductsPage';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { store } from 'react-notifications-component'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\n\n\nconst ProductsPage = (props) => {\n    const [products, setProducts] = useState([])\n    useEffect(() => {\n        const fetchProducts = async () => {\n            const response = await axios.get('/products')\n\n            setProducts(response.data)\n        }\n\n        fetchProducts();\n    }, [])\n\n    const history = useHistory()\n    let sumQty = 0\n    let sumPrice = 0;\n\n    const handleProductEdit = (productId) => {\n        Axios.get(`/products/${productId}`)\n        .then(res => {\n            history.push(`/products/${productId}`)\n            return <EditProductsPage productId={productId} />\n        })\n    }\n\n    const handleProductDelete = (productId) => {\n        const [pdct] = products.filter(item => item._id === productId)\n        confirmAlert({\n            title: `Delete ${pdct.title}`,\n            message: 'Are you sure you want to delete this ? This action is irreversable.',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () => {\n                    Axios.delete(`/products/${pdct._id}`)\n                    .then(() => {\n                        store.addNotification({\n                            title: \"Product Deleted\",\n                            message: pdct.title + \" has been successfully deleted.\",\n                            type: \"success\",\n                            insert: \"top\",\n                            container: \"top-right\",\n                            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                            dismiss: {\n                              duration: 5000,\n                              onScreen: true\n                            }\n                        });\n                        const newProducts = products.filter(item => item._id !== pdct._id)\n                        setProducts(newProducts)\n                    })\n                    .catch(e => {\n                        console.log(e)\n                    })\n                }\n              },\n              {\n                label: 'No',\n                onClick: () => {}\n              }\n            ]\n        });\n    }\n\n    return (\n        <div>\n            <Container>\n                <h1 className=\"pageTitle\">Products Page</h1>\n                {\n                    props.auth.isAuthenticated \n                    ? <Button style={{marginBottom: 20, float: \"right\"}} onClick={() => history.push('/products/addnew')}> <FaPlus style={{paddingBottom: 2}} /> Add Products</Button>\n                    : <></>\n                }\n                \n                <Table striped responsive bordered hover>\n                    <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Item Name</th>\n                        <th>Quantity</th>\n                        <th>Price Per Item</th>\n                        <th>Total Amount</th>\n                        {\n                            props.auth.isAuthenticated \n                            ? <th colSpan=\"2\" style={{textAlign: \"center\"}}>Edit</th>\n                            : <></>\n                        }\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            products && products.length > 0\n                            ? products.map((item, index) => {\n                                sumQty += item.quantity\n                                sumPrice += (item.price * item.quantity)\n                                return (\n                                    <tr key={index}>\n                                        <td>{index+1}</td> \n                                        <td>{item.title}</td>\n                                        <td>{item.quantity}</td>\n                                        <td>{item.price}</td>\n                                        <td>{item.price * item.quantity}</td>\n                                        {\n                                            props.auth.isAuthenticated\n                                            ? <>\n                                                <td>\n                                                    <FaEdit color=\"green\" cursor=\"pointer\" onClick={() => handleProductEdit(item._id)} />\n                                                </td>\n                                                <td>\n                                                    <FaTrashAlt color=\"red\" cursor=\"pointer\" onClick={() => handleProductDelete(item._id)} />\n                                                </td>\n                                            </>\n                                            : <></>\n                                        }\n                                    </tr>\n                                )\n                            }) : <tr><td colSpan=\"6\" style={{textAlign: \"center\"}}>No Data Found</td></tr>\n                        }\n                        {\n                            products && products.length > 0\n                            ? <tr>\n                                <td></td>\n                                <td></td>\n                                <td>{sumQty}</td>\n                                <td></td>\n                                <td>{sumPrice}</td>\n                                {\n                                    props.auth.isAuthenticated\n                                    ? <td colSpan=\"2\"></td>\n                                    : <></>\n                                }\n                            </tr>\n                            : <tr></tr>\n                        }\n                    </tbody>\n                </Table>\n            </Container>\n        </div>\n    )\n}\n\nProductsPage.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n  \nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(ProductsPage)\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n    if (token) {\n        // Apply authorization token to every request if logged in\n        axios.defaults.headers.common['Authorization'] = token;\n    } else {\n        // Delete auth header\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}\n\nexport default setAuthToken;","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { store } from 'react-notifications-component'\n\nimport {\n    GET_ERRORS,\n    SET_CURRENT_USER,\n    USER_LOADING\n} from './types';\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n    axios\n    .post(\"/register\", userData)\n    .then(res => {\n        store.addNotification({\n            title: `Success`,\n            message: `Now login to your account.`,\n            type: \"success\",\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n            dismiss: {\n              duration: 5000,\n              onScreen: true\n            }\n        });\n        history.push(\"/login\") // Redirect to login on successful register\n    })\n    .catch(err => dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n    }))\n}\n\n// Login - Get user token\nexport const loginUser = userData => dispatch => {\n    axios.post('/login', userData)\n    .then(res => {\n        // Save to localstorage\n\n        // Set token to localStorage\n        const { token } = res.data;\n        localStorage.setItem('jwtToken', token);\n        setAuthToken(token);\n\n        store.addNotification({\n            title: `Welcome`,\n            message: `You are now successfully logged in.`,\n            type: \"success\",\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n            dismiss: {\n              duration: 5000,\n              onScreen: true\n            }\n        });\n        \n        // Decode token to get userData\n        const decoded = jwt_decode(token);\n        dispatch(setCurrentUser(decoded))\n    })\n    .catch(err => {\n        let errorTitle = \"Error\"\n        let errorMessage = \"An Error occured\"\n        if (err.response.data) {\n            if (err.response.data.emailnotfound) {\n                errorTitle = err.response.data.emailnotfound;\n                errorMessage = \"This email is not registered with us.\"\n            }\n\n            if (err.response.data.passwordincorrect) {\n                errorTitle = err.response.data.passwordincorrect;\n                errorMessage = \"Please enter the correct password.\"\n            }\n        }\n        store.addNotification({\n            title: `${errorTitle}`,\n            message: `${errorMessage}`,\n            type: \"danger\",\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n            dismiss: {\n              duration: 5000,\n              onScreen: true\n            }\n        });\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    })\n}\n\n// Set Logged in User\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    }\n}\n\n// User Loading\nexport const setUserLoading = () => {\n    return {\n        type: USER_LOADING\n    }\n}\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n    // Remove token from local storage\n    localStorage.removeItem('jwtToken');\n\n    // Remove auth header for future requests\n    setAuthToken(false);\n\n    // Set current user to empty object {} \n    // which will set isAuthenticated false\n    dispatch(setCurrentUser({}))\n}","import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport { FaUserCircle} from 'react-icons/fa'\n// import { useHistory } from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport setAuthToken from \"../utils/setAuthToken\";\nimport { setCurrentUser } from \"../actions/authActions\";\nimport { store } from 'react-notifications-component'\n\nconst logout = () => {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false)\n    setCurrentUser({})\n    window.location.href = \"/login\"\n    store.addNotification({\n        title: `Success`,\n        message: `You are now successfully logged out.`,\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true\n        }\n    });\n}\n\nfunction MyNavbar(props) {\n\n    return (\n        <div>\n            <Navbar bg=\"dark\" sticky=\"top\" expand=\"lg\" variant=\"dark\">\n                <Navbar.Brand href=\"/\">Centurian Systems</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"/\">Home</Nav.Link>\n                        <Nav.Link href=\"/products\">Products</Nav.Link>\n                        <Nav.Link disabled={!props.auth.isAuthenticated} href=\"/sales\">Sales</Nav.Link>\n                        <Nav.Link disabled={!props.auth.isAuthenticated} href=\"/purchases\">Purchase</Nav.Link>\n                    </Nav>\n                    <Nav>\n                        <DropdownButton\n                            rootCloseEvent=\"click\"\n                            variant=\"secondary\"\n                            menuAlign={{ lg: 'right' }}\n                            title={<FaUserCircle color=\"white\" size=\"25\" />}\n                            id=\"dropdown-menu-align-responsive-1\"\n                        >\n                            \n                            <Dropdown.ItemText>Hi {props.auth.user.name ? props.auth.user.name : \"Guest\"} 👋</Dropdown.ItemText>\n                            <Dropdown.Divider></Dropdown.Divider>\n                            {\n                                props.auth.isAuthenticated \n                                ? <> \n                                    <Dropdown.Item onClick={() => alert('This is yet to be implemented.')}>Edit Profile</Dropdown.Item>\n                                    <Dropdown.Item onClick={logout}>Logout</Dropdown.Item>\n                                </>\n                                : <Dropdown.Item href=\"/login\">Login</Dropdown.Item>\n                            }\n                        </DropdownButton>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        </div>\n    )\n}\n\nMyNavbar.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n  \nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(MyNavbar)\n    ","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport './container.css'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Axios from 'axios';\nimport { FaArrowLeft } from 'react-icons/fa'\nimport { store } from 'react-notifications-component';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\nimport { useEffect } from 'react'\n\nconst initialData = Object.freeze({\n    title: \"\",\n    quantity: 0,\n    price: \"4000\",\n    dateOfRecieve: Date.now(),\n    dateOfInvoice: Date.now(),\n    invoiceNumber: \"\",\n    vendorName: \"\"\n})\n\nconst AddProductsPage = (props) => {\n    const [formData, setFormData] = useState(initialData)\n    const today = Date.now();\n    const history = useHistory()\n\n    useEffect(() => {\n        if (!props.auth.isAuthenticated) {\n            history.push('/login')\n        }\n    }, [props, history])\n\n    const handleFormChange = (e, updatedAt) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        setFormData({\n            ...formData,\n            [name]: value\n        })\n    }\n\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n        Axios.post('/products', { data: formData })\n        .then(() => {\n            store.addNotification({\n                title: \"Product Added\",\n                message: formData.title + \" added successfully to the inventory.\",\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-right\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n            });\n            history.push('/products')\n        })\n        .catch(e => {\n            console.log(e)\n        })\n    }\n\n    return (\n        <div>\n            <Container>\n                <h1 className=\"pageTitle\">\n                    <Button style={{float: \"left\", marginTop: 10}} onClick={() => history.goBack()}>\n                        <FaArrowLeft style={{paddingBottom: 2}} /> Back\n                    </Button>\n                    Add Product\n                </h1>\n                <Form onSubmit={handleFormSubmit} style={{\n                    marginTop: 20,\n                    padding: 20,\n                    borderRadius: 10,\n                    border: '1px solid gray'\n                }}>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"itemName\">\n                            <Form.Label>Item Name</Form.Label>\n                            <Form.Control name=\"title\" onChange={handleFormChange} type=\"text\" placeholder=\"Enter Item Name\" />\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"formGridPassword\">\n                            <Form.Label>Quantity</Form.Label>\n                            <Form.Control name=\"quantity\" onChange={handleFormChange} type=\"number\" min=\"0\" placeholder=\"Enter Item Quantity\" />\n                        </Form.Group>\n                    </Form.Row>\n                    \n                    <Form.Group controlId=\"formGridAddress1\">\n                        <Form.Label>Vendor Name</Form.Label>\n                        <Form.Control name=\"vendorName\" onChange={handleFormChange} placeholder=\"E.g: Hikvision\" />\n                    </Form.Group>\n                    \n                    <Form.Group controlId=\"formGridAddress2\">\n                        <Form.Label>Invoice Number</Form.Label>\n                        <Form.Control name=\"invoiceNumber\" onChange={handleFormChange} placeholder=\"Enter the Invoice Number\" />\n                    </Form.Group>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridCity\">\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control name=\"price\" onChange={handleFormChange} placeholder=\"Enter the price of the item\"/>\n                        </Form.Group>\n\n                        {/* <Form.Group as={Col} controlId=\"formGridCity\">\n                            <Form.Label>GST</Form.Label>\n                            <Form.Control name=\"price\" onChange={handleFormChange} placeholder=\"Enter the GST percentage\" type=\"number\" min=\"0\"/>\n                        </Form.Group> */}\n\n                        <Form.Group as={Col} controlId=\"formGridState\">\n                            <Form.Label>Date of Recieve</Form.Label>\n                            <Form.Control name=\"dateOfRecieve\" onChange={handleFormChange} type=\"date\" min={today} />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridZip\">\n                            <Form.Label>Date of Invoice</Form.Label>\n                            <Form.Control name=\"dateOfInvoice\" onChange={handleFormChange} type=\"date\" min={today} />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </Container>\n        </div>\n    )\n}\n\nAddProductsPage.propTypes = {\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps)(AddProductsPage)\n        ","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport './container.css'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Axios from 'axios';\nimport { FaArrowLeft } from 'react-icons/fa'\nimport { store } from 'react-notifications-component';\n\nconst EditSalesPage = () => {\n    const history = useHistory()\n    const [sale, setSale] = useState({})\n    useEffect(() => {\n        const fetchSaleInfo = async () => {\n            Axios.get(history.location.pathname)\n            .then(res => {\n                setSale(res.data)\n            })\n        }\n        fetchSaleInfo();\n    }, [history.location.pathname])\n    const today = Date.now();\n    const DOS = new Date(sale.dateOfSale)\n    const DOI = new Date(sale.dateOfInvoice)\n    \n    // Breaking Date for show during edit\n    const dateDOI = DOI.getDate()\n    const monthDOI = DOI.getMonth()\n    const yearDOI = DOI.getFullYear()\n\n    const dateDOS = DOS.getDate()\n    const monthDOS = DOS.getMonth()\n    const yearDOS = DOS.getFullYear() \n\n    const handleFormChange = (e, updatedAt) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        setSale({\n            ...sale,\n            [name]: value\n        })\n    }\n\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n        Axios.put(`/sales/${sale._id}`, { data: sale })\n        .then(() => {\n            store.addNotification({\n                title: \"Sale Updated\",\n                message: sale.title + \" has been successfully updated.\",\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-right\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n            });\n            history.push('/sales')\n        })\n        .catch(e => {\n            console.log(e)\n        })\n    }\n\n    return (\n        <div>\n            <Container>\n                <h1 className=\"pageTitle\">\n                    <Button style={{float: \"left\", marginTop: 10}} onClick={() => history.goBack()}>\n                       <FaArrowLeft style={{paddingBottom: 2}} /> Back\n                    </Button>\n                    Edit Sale\n                </h1>\n            \n                <Form onSubmit={handleFormSubmit} style={{\n                    marginTop: 20,\n                    padding: 20,\n                    borderRadius: 10,\n                    border: '1px solid gray'\n                }}>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"itemName\">\n                            <Form.Label>Product Name</Form.Label>\n                            <Form.Control name=\"title\" onChange={handleFormChange} type=\"text\" value={sale.productName} placeholder=\"Enter Item Name\" />\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"formGridPassword\">\n                            <Form.Label>Quantity</Form.Label>\n                            <Form.Control name=\"quantity\" value={sale.quantity} onChange={handleFormChange} type=\"number\" min=\"0\" placeholder=\"Enter Product Quantity\" />\n                        </Form.Group>\n                    </Form.Row>\n                    \n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridAddress1\">\n                            <Form.Label>Customer Name</Form.Label>\n                            <Form.Control name=\"customerName\" value={sale.customerName} onChange={handleFormChange} placeholder=\"E.g: Mayank Khanna\" />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridAddress1\">\n                            <Form.Label>Customer Contact</Form.Label>\n                            <Form.Control name=\"customerContact\" value={sale.customerContact} onChange={handleFormChange} placeholder=\"Mobile Number: 9876543210\" />\n                        </Form.Group>\n                    </Form.Row>\n                    \n                    <Form.Group controlId=\"formGridAddress2\">\n                        <Form.Label>Invoice Number</Form.Label>\n                        <Form.Control name=\"invoiceNumber\" value={sale.invoiceNumber} onChange={handleFormChange} placeholder=\"Enter the Invoice Number\" />\n                    </Form.Group>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridCity\">\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control name=\"salesPrice\" value={sale.salesPrice} onChange={handleFormChange} placeholder=\"Enter the price of the item\"/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridState\">\n                            <Form.Label>Date of Sale</Form.Label>\n                            <Form.Control name=\"dateOfSale\" value={`${yearDOS}-${monthDOS}-${dateDOS}`} onChange={handleFormChange} type=\"date\" min={today} />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridZip\">\n                            <Form.Label>Date of Invoice</Form.Label>\n                            <Form.Control name=\"dateOfInvoice\" value={`${yearDOI}-${monthDOI}-${dateDOI}`} onChange={handleFormChange} type=\"date\" min={today} />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Update\n                    </Button>\n                </Form>\n            </Container>\n        </div>\n    )\n}\n\nexport default EditSalesPage\n        ","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\nimport axios from 'axios'\nimport './container.css'\nimport Button from 'react-bootstrap/esm/Button';\nimport { FaPlus, FaEdit } from 'react-icons/fa'\nimport Axios from 'axios';\n// import { confirmAlert } from 'react-confirm-alert';\nimport EditSalesPage from './EditSalesPage.js'\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n// import { store } from 'react-notifications-component'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\n\nconst SalesPage = (props) => {\n    const [sales, setSales] = useState([])\n    const history = useHistory()\n    useEffect(() => {\n        if (props.auth.isAuthenticated) {\n            const fetchSales = async () => {\n                const response = await axios.get('/sales')\n    \n                setSales(response.data)\n            }\n    \n            fetchSales();\n        } else {\n            history.push('/login')\n        }\n    }, [props, history])\n\n    let sumQty = 0\n    let sumPrice = 0;\n\n    const handleSalesEdit = (saleId) => {\n        Axios.get(`/sales/${saleId}`)\n        .then(res => {\n            history.push(`/sales/${saleId}`)\n            return <EditSalesPage saleId={saleId} />\n        })\n    }\n\n    // Not including this feature\n    // const handleSalesDelete = (saleId) => {\n    //     const [delSale] = sales.filter(sale => sale._id === saleId)\n    //     console.log(delSale)\n    //     confirmAlert({\n    //         title: `Delete ${delSale.productName}`,\n    //         message: 'Are you sure you want to delete this ? This action is irreversable.',\n    //         buttons: [\n    //           {\n    //             label: 'Yes',\n    //             onClick: () => {\n    //                 Axios.delete(`/sales/${delSale._id}`)\n    //                 .then(() => {\n    //                     store.addNotification({\n    //                         title: \"Sale Deleted\",\n    //                         message: delSale.productName + \" has been successfully deleted.\",\n    //                         type: \"success\",\n    //                         insert: \"top\",\n    //                         container: \"top-right\",\n    //                         animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n    //                         animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n    //                         dismiss: {\n    //                           duration: 5000,\n    //                           onScreen: true\n    //                         }\n    //                     });\n    //                     const newSales = sales.filter(item => item._id !== delSale._id)\n    //                     setSales(newSales)\n    //                 })\n    //                 .catch(e => {\n    //                     console.log(e)\n    //                 })\n    //             }\n    //           },\n    //           {\n    //             label: 'No',\n    //             onClick: () => {}\n    //           }\n    //         ]\n    //     });\n    // }\n\n    return (\n        <div>\n            <Container>\n                <h1 className=\"pageTitle\">Sales Page</h1>\n                <Button style={{marginBottom: 20, float: \"right\"}} onClick={() => history.push('/sales/addnew')}> <FaPlus style={{paddingBottom: 2}} /> Add New Sale</Button>\n                <Table striped responsive bordered hover>\n                    <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Item Name</th>\n                        <th>Quantity</th>\n                        <th>Price Per Item</th>\n                        <th>Customer Name</th>\n                        <th>Total Amount</th>\n                        <th colSpan=\"2\" style={{textAlign: \"center\"}}>Edit</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            sales && sales.length > 0\n                            ? sales.map((item, index) => {\n                                sumQty += item.quantity\n                                sumPrice += Number(item.totalBill)\n                                return (\n                                    <tr key={index}>\n                                        <td>{index+1}</td> \n                                        <td>{item.productName}</td>\n                                        <td>{item.quantity}</td>\n                                        <td>{item.salesPrice}</td>\n                                        <td>{item.customerName}</td>\n                                        <td>{item.totalBill}</td>\n                                        <td>\n                                            <FaEdit color=\"green\" cursor=\"pointer\" onClick={() => handleSalesEdit(item._id)} />\n                                        </td>\n                                        {/* <td>\n                                            <FaTrashAlt color=\"red\" cursor=\"pointer\" onClick={() => handleSalesDelete(item._id)} />\n                                        </td> */}\n                                    </tr>\n                                )\n                            }) : <tr><td colSpan=\"7\" style={{textAlign: \"center\"}}>No Data Found</td></tr>\n                        }\n                        {\n                            sales && sales.length > 0\n                            ? <tr>\n                                <td></td>\n                                <td></td>\n                                <td>{sumQty}</td>\n                                <td></td>\n                                <td></td>\n                                <td>{sumPrice}</td>\n                                <td colSpan=\"2\"></td>\n                            </tr>\n                            : <tr></tr>\n                        }\n                    </tbody>\n                </Table>\n            </Container>\n        </div>\n    )\n}\n\nSalesPage.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n  \nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(SalesPage)\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport './container.css'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Axios from 'axios';\nimport { FaArrowLeft } from 'react-icons/fa'\nimport axios from 'axios'\nimport { store } from 'react-notifications-component';\nimport Select from 'react-select'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\n\nconst initialData = Object.freeze({\n    productName: \"\",\n    quantity: 0,\n    salesPrice: 4000,\n    dateOfSale: Date.now(),\n    dateOfInvoice: Date.now(),\n    invoiceNumber: \"\",\n    customerName: \"\",\n    customerContact: \"\",\n})\n\nconst AddSalesPage = (props) => {\n    const [formData, setFormData] = useState(initialData)\n    const [products, setProducts] = useState([])\n    const today = Date.now();\n    const history = useHistory()\n    useEffect(() => {\n        if (props.auth.isAuthenticated) {\n            const fetchProducts = async () => {\n                const response = await axios.get('/products')\n    \n                setProducts(response.data)\n            }\n    \n            fetchProducts();\n        } else {\n            history.push('/login')\n        }\n    }, [props, history])\n\n    const handleFormChange = (e, updatedAt) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        setFormData({\n            ...formData,\n            [name]: value\n        })\n    }\n\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n        formData.totalBill = formData.salesPrice * formData.quantity\n        Axios.post('/sales', { data: formData })\n        .then(() => {\n            store.addNotification({\n                title: \"Sale Added\",\n                message: formData.title + \" added successfully to the inventory.\",\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-right\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n            });\n            history.push('/sales')\n        })\n        .catch(e => {\n            console.log(e)\n        })\n    }\n\n    let dropDownOptions = [];\n    const availableProducts = products.filter(item => item.quantity >= 1)\n    dropDownOptions = availableProducts.map(item => {\n        return {\n            value: item.title,\n            label: item.title,\n        }\n    })\n\n    const handleSelectChange = (e) => {\n        const value = e && e.value ? e.value : \"\";\n        setFormData({\n            ...formData,\n            productName: value\n        })\n    }\n\n    return (\n        <div>\n            <Container>\n                <h1 className=\"pageTitle\">\n                    <Button style={{float: \"left\", marginTop: 10}} onClick={() => history.goBack()}>\n                        <FaArrowLeft style={{paddingBottom: 2}} /> Back\n                    </Button>\n                    Add Sale\n                </h1>\n                <Form onSubmit={handleFormSubmit} style={{\n                    marginTop: 20,\n                    padding: 20,\n                    borderRadius: 10,\n                    border: '1px solid gray'\n                }}>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"itemName\">\n                            <Form.Label>Product Name</Form.Label>\n                            <Select onChange={handleSelectChange} isClearable=\"true\" placeholder=\"Choose a product from Inventory...\" options={dropDownOptions} />\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"formGridPassword\">\n                            <Form.Label>Quantity</Form.Label>\n                            <Form.Control name=\"quantity\" onChange={handleFormChange} value={products.filter(item => item.title === formData.productName).quantity} type=\"number\" min=\"0\" placeholder=\"Enter Product Quantity\" />\n                        </Form.Group>\n                    </Form.Row>\n                    \n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridAddress1\">\n                            <Form.Label>Customer Name</Form.Label>\n                            <Form.Control name=\"customerName\" onChange={handleFormChange} placeholder=\"E.g: Mayank Khanna\" />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridAddress1\">\n                            <Form.Label>Customer Contact</Form.Label>\n                            <Form.Control name=\"customerContact\" onChange={handleFormChange} placeholder=\"Mobile Number: 9876543210\" />\n                        </Form.Group>\n                    </Form.Row>\n                    \n                    <Form.Group controlId=\"formGridAddress2\">\n                        <Form.Label>Invoice Number</Form.Label>\n                        <Form.Control name=\"invoiceNumber\" onChange={handleFormChange} placeholder=\"Enter the Invoice Number\" />\n                    </Form.Group>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridCity\">\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control name=\"salesPrice\" onChange={handleFormChange} placeholder=\"Enter the price of the item\"/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridState\">\n                            <Form.Label>Date of Sale</Form.Label>\n                            <Form.Control name=\"dateOfSale\" onChange={handleFormChange} type=\"date\" min={today} />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridZip\">\n                            <Form.Label>Date of Invoice</Form.Label>\n                            <Form.Control name=\"dateOfInvoice\" onChange={handleFormChange} type=\"date\" min={today} />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </Container>\n        </div>\n    )\n}\n\nAddSalesPage.propTypes = {\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps)(AddSalesPage)\n        ","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport './container.css'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Axios from 'axios';\nimport { FaArrowLeft } from 'react-icons/fa'\nimport { store } from 'react-notifications-component';\n\nconst EditPurchasesPage = () => {\n    const history = useHistory()\n    const [purchase, setPurchase] = useState({})\n    useEffect(() => {\n        const fetchPurchaseInfo = async () => {\n            Axios.get(history.location.pathname)\n            .then(res => {\n                setPurchase(res.data)\n            })\n        }\n        fetchPurchaseInfo();\n    }, [history.location.pathname])\n    const today = Date.now();\n    const DOS = new Date(purchase.dateOfPurchase)\n    const DOI = new Date(purchase.dateOfInvoice)\n    \n    // Breaking Date for show during edit\n    const dateDOI = DOI.getDate()\n    const monthDOI = DOI.getMonth()\n    const yearDOI = DOI.getFullYear()\n\n    const dateDOS = DOS.getDate()\n    const monthDOS = DOS.getMonth()\n    const yearDOS = DOS.getFullYear() \n\n    const handleFormChange = (e, updatedAt) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        setPurchase({\n            ...purchase,\n            [name]: value\n        })\n    }\n\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n        Axios.put(`/purchases/${purchase._id}`, { data: purchase })\n        .then(() => {\n            store.addNotification({\n                title: \"Purchase Updated\",\n                message: purchase.title + \" has been successfully updated.\",\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-right\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n            });\n            history.push('/purchases')\n        })\n        .catch(e => {\n            console.log(e)\n        })\n    }\n\n    return (\n        <div>\n            <Container>\n                <h1 className=\"pageTitle\">\n                    <Button style={{float: \"left\", marginTop: 10}} onClick={() => history.goBack()}>\n                       <FaArrowLeft style={{paddingBottom: 2}} /> Back\n                    </Button>\n                    Edit Purchase\n                </h1>\n            \n                <Form onSubmit={handleFormSubmit} style={{\n                    marginTop: 20,\n                    padding: 20,\n                    borderRadius: 10,\n                    border: '1px solid gray'\n                }}>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"itemName\">\n                            <Form.Label>Product Name</Form.Label>\n                            <Form.Control name=\"title\" onChange={handleFormChange} type=\"text\" value={purchase.productName} placeholder=\"Enter Item Name\" />\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"formGridPassword\">\n                            <Form.Label>Quantity</Form.Label>\n                            <Form.Control name=\"quantity\" value={purchase.quantity} onChange={handleFormChange} type=\"number\" min=\"0\" placeholder=\"Enter Product Quantity\" />\n                        </Form.Group>\n                    </Form.Row>\n                    \n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridAddress1\">\n                            <Form.Label>Customer Name</Form.Label>\n                            <Form.Control name=\"customerName\" value={purchase.customerName} onChange={handleFormChange} placeholder=\"E.g: Mayank Khanna\" />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridAddress1\">\n                            <Form.Label>Customer Contact</Form.Label>\n                            <Form.Control name=\"customerContact\" value={purchase.customerContact} onChange={handleFormChange} placeholder=\"Mobile Number: 9876543210\" />\n                        </Form.Group>\n                    </Form.Row>\n                    \n                    <Form.Group controlId=\"formGridAddress2\">\n                        <Form.Label>Invoice Number</Form.Label>\n                        <Form.Control name=\"invoiceNumber\" value={purchase.invoiceNumber} onChange={handleFormChange} placeholder=\"Enter the Invoice Number\" />\n                    </Form.Group>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridCity\">\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control name=\"purchasesPrice\" value={purchase.purchasesPrice} onChange={handleFormChange} placeholder=\"Enter the price of the item\"/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridState\">\n                            <Form.Label>Date of Purchase</Form.Label>\n                            <Form.Control name=\"dateOfPurchase\" value={`${yearDOS}-${monthDOS}-${dateDOS}`} onChange={handleFormChange} type=\"date\" min={today} />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridZip\">\n                            <Form.Label>Date of Invoice</Form.Label>\n                            <Form.Control name=\"dateOfInvoice\" value={`${yearDOI}-${monthDOI}-${dateDOI}`} onChange={handleFormChange} type=\"date\" min={today} />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Update\n                    </Button>\n                </Form>\n            </Container>\n        </div>\n    )\n}\n\nexport default EditPurchasesPage\n        ","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Container from 'react-bootstrap/Container'\nimport Table from 'react-bootstrap/Table'\nimport axios from 'axios'\nimport './container.css'\nimport Button from 'react-bootstrap/esm/Button';\nimport { FaPlus, FaEdit } from 'react-icons/fa'\nimport Axios from 'axios';\n// import { confirmAlert } from 'react-confirm-alert';\nimport EditPurchasesPage from './EditPurchasesPage.js'\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n// import { store } from 'react-notifications-component'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\n\nconst PurchasesPage = (props) => {\n    const [purchases, setPurchases] = useState([])\n    const history = useHistory()\n    useEffect(() => {\n        if (props.auth.isAuthenticated) {\n            const fetchPurchases = async () => {\n                const response = await axios.get('/purchases')\n    \n                setPurchases(response.data)\n            }\n    \n            fetchPurchases();   \n        } else {\n            history.push('/login')\n        }\n    }, [props, history])\n\n    let sumQty = 0\n    let sumPrice = 0;\n\n    const handlePurchasesEdit = (purchaseId) => {\n        Axios.get(`/purchases/${purchaseId}`)\n        .then(res => {\n            history.push(`/purchases/${purchaseId}`)\n            return <EditPurchasesPage purchaseId={purchaseId} />\n        })\n    }\n\n    // Not including this feature\n    // const handlePurchasesDelete = (purchaseId) => {\n    //     const [delPurchase] = purchases.filter(purchase => purchase._id === purchaseId)\n    //     console.log(delPurchase)\n    //     confirmAlert({\n    //         title: `Delete ${delPurchase.productName}`,\n    //         message: 'Are you sure you want to delete this ? This action is irreversable.',\n    //         buttons: [\n    //           {\n    //             label: 'Yes',\n    //             onClick: () => {\n    //                 Axios.delete(`/purchases/${delPurchase._id}`)\n    //                 .then(() => {\n    //                     store.addNotification({\n    //                         title: \"Purchase Deleted\",\n    //                         message: delPurchase.productName + \" has been successfully deleted.\",\n    //                         type: \"success\",\n    //                         insert: \"top\",\n    //                         container: \"top-right\",\n    //                         animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n    //                         animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n    //                         dismiss: {\n    //                           duration: 5000,\n    //                           onScreen: true\n    //                         }\n    //                     });\n    //                     const newPurchases = purchases.filter(item => item._id !== delPurchase._id)\n    //                     setPurchases(newPurchases)\n    //                 })\n    //                 .catch(e => {\n    //                     console.log(e)\n    //                 })\n    //             }\n    //           },\n    //           {\n    //             label: 'No',\n    //             onClick: () => {}\n    //           }\n    //         ]\n    //     });\n    // }\n\n    return (\n        <div>\n            <Container>\n                <h1 className=\"pageTitle\">Purchases Page</h1>\n                <Button style={{marginBottom: 20, float: \"right\"}} onClick={() => history.push('/purchases/addnew')}> <FaPlus style={{paddingBottom: 2}} /> Add New Purchase</Button>\n                <Table striped responsive bordered hover>\n                    <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Item Name</th>\n                        <th>Quantity</th>\n                        <th>Price Per Item</th>\n                        <th>Customer Name</th>\n                        <th>Total Amount</th>\n                        <th colSpan=\"2\" style={{textAlign: \"center\"}}>Edit</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            purchases && purchases.length > 0\n                            ? purchases.map((item, index) => {\n                                sumQty += item.quantity\n                                sumPrice += Number(item.totalBill)\n                                return (\n                                    <tr key={index}>\n                                        <td>{index+1}</td> \n                                        <td>{item.productName}</td>\n                                        <td>{item.quantity}</td>\n                                        <td>{item.purchasesPrice}</td>\n                                        <td>{item.customerName}</td>\n                                        <td>{item.totalBill}</td>\n                                        <td>\n                                            <FaEdit color=\"green\" cursor=\"pointer\" onClick={() => handlePurchasesEdit(item._id)} />\n                                        </td>\n                                        {/* <td>\n                                            <FaTrashAlt color=\"red\" cursor=\"pointer\" onClick={() => handlePurchasesDelete(item._id)} />\n                                        </td> */}\n                                    </tr>\n                                )\n                            }) : <tr><td colSpan=\"7\" style={{textAlign: \"center\"}}>No Data Found</td></tr>\n                        }\n                        {\n                            purchases && purchases.length > 0\n                            ? <tr>\n                                <td></td>\n                                <td></td>\n                                <td>{sumQty}</td>\n                                <td></td>\n                                <td></td>\n                                <td>{sumPrice}</td>\n                                <td colSpan=\"2\"></td>\n                            </tr>\n                            : <tr></tr>\n                        }\n                    </tbody>\n                </Table>\n            </Container>\n        </div>\n    )\n}\n\nPurchasesPage.propTypes = {\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps)(PurchasesPage)\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport './container.css'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Axios from 'axios';\nimport { FaArrowLeft } from 'react-icons/fa'\nimport axios from 'axios'\nimport { store } from 'react-notifications-component';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\n\nconst initialData = Object.freeze({\n    productName: \"\",\n    quantity: 0,\n    purchasesPrice: 4000,\n    dateOfPurchase: Date.now(),\n    dateOfInvoice: Date.now(),\n    invoiceNumber: \"\",\n    customerName: \"\",\n    customerContact: \"\",\n})\n\nconst AddPurchasesPage = (props) => {\n    const [formData, setFormData] = useState(initialData)\n    const [products, setProducts] = useState([])\n    const today = Date.now();\n    const history = useHistory()\n    useEffect(() => {\n        if (props.auth.isAuthenticated) {\n            const fetchProducts = async () => {\n                const response = await axios.get('/products')\n    \n                setProducts(response.data)\n            }\n    \n            fetchProducts();\n        } else {\n            history.push('/login')\n        }\n    }, [props, history])\n\n    const handleFormChange = (e, updatedAt) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        setFormData({\n            ...formData,\n            [name]: value\n        })\n    }\n\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n        formData.totalBill = formData.purchasesPrice * formData.quantity\n        Axios.post('/purchases', { data: formData })\n        .then(() => {\n            store.addNotification({\n                title: \"Purchase Added\",\n                message: formData.title + \" added successfully to the inventory.\",\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-right\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 5000,\n                  onScreen: true\n                }\n            });\n            history.push('/purchases')\n        })\n        .catch(e => {\n            console.log(e)\n        })\n    }\n\n    return (\n        <div>\n            <Container>\n                <h1 className=\"pageTitle\">\n                    <Button style={{float: \"left\", marginTop: 10}} onClick={() => history.goBack()}>\n                        <FaArrowLeft style={{paddingBottom: 2}} /> Back\n                    </Button>\n                    Add Purchase\n                </h1>\n                <Form onSubmit={handleFormSubmit} style={{\n                    marginTop: 20,\n                    padding: 20,\n                    borderRadius: 10,\n                    border: '1px solid gray'\n                }}>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"itemName\">\n                            <Form.Label>Product Name</Form.Label>\n                            <Form.Control name=\"productName\" onChange={handleFormChange} type=\"text\" placeholder=\"Enter Product Name\" />\n                        </Form.Group>\n                        \n                        <Form.Group as={Col} controlId=\"formGridPassword\">\n                            <Form.Label>Quantity</Form.Label>\n                            <Form.Control name=\"quantity\" onChange={handleFormChange} value={products.filter(item => item.title === formData.productName).quantity} type=\"number\" min=\"0\" placeholder=\"Enter Product Quantity\" />\n                        </Form.Group>\n                    </Form.Row>\n                    \n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridAddress1\">\n                            <Form.Label>Customer Name</Form.Label>\n                            <Form.Control name=\"customerName\" onChange={handleFormChange} placeholder=\"E.g: Mayank Khanna\" />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridAddress1\">\n                            <Form.Label>Customer Contact</Form.Label>\n                            <Form.Control name=\"customerContact\" onChange={handleFormChange} placeholder=\"Mobile Number: 9876543210\" />\n                        </Form.Group>\n                    </Form.Row>\n                    \n                    <Form.Group controlId=\"formGridAddress2\">\n                        <Form.Label>Invoice Number</Form.Label>\n                        <Form.Control name=\"invoiceNumber\" onChange={handleFormChange} placeholder=\"Enter the Invoice Number\" />\n                    </Form.Group>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridCity\">\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control name=\"purchasesPrice\" onChange={handleFormChange} placeholder=\"Enter the price of the item\"/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridState\">\n                            <Form.Label>Date of Purchase</Form.Label>\n                            <Form.Control name=\"dateOfPurchase\" onChange={handleFormChange} type=\"date\" min={today} />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridZip\">\n                            <Form.Label>Date of Invoice</Form.Label>\n                            <Form.Control name=\"dateOfInvoice\" onChange={handleFormChange} type=\"date\" min={today} />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </Container>\n        </div>\n    )\n}\n\nAddPurchasesPage.propTypes = {\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps)(AddPurchasesPage)\n        ","import React, { useState } from \"react\";\nimport { Link, withRouter } from 'react-router-dom'\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { registerUser } from '../../actions/authActions'\nimport { connect } from 'react-redux'\nimport { useEffect } from \"react\";\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nconst Register = (props) => {\n    const [registerForm, setRegisterForm] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        password2: \"\",\n        errors: {}\n    })\n\n    useEffect(() => {\n        if (props.auth.isAuthenticated) {\n            props.history.push('/products');\n        }\n    },[props])\n\n    const handleFormChange = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        setRegisterForm({\n            ...registerForm,\n            [name]: value\n        })\n    }\n\n    const handleFormSubmit = e => {\n        e.preventDefault();\n        const newUser = {\n            name: registerForm.name,\n            email: registerForm.email,\n            password: registerForm.password,\n            password2: registerForm.password2\n        };\n\n        props.registerUser(newUser, props.history)\n    }\n\n    const { errors } = registerForm;\n\n    return (\n        <Container>\n              <h1 style={{marginTop: 20, textAlign: 'center'}}>Register</h1>\n              <Form style={{\n                          marginTop: 20,\n                          padding: 20,\n                          borderRadius: 10,\n                          border: '1px solid gray'\n                      }}\n                onSubmit={handleFormSubmit}\n              >\n                  <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>Name<span style={{color: \"red\"}}>*</span></Form.Label>\n                      <Form.Control className={\n                            classnames(\"\", {invalid: errors.name})} \n                            onChange={handleFormChange} name=\"name\" \n                            type=\"text\" placeholder=\"Enter your name\" \n                        />\n                  </Form.Group>\n                  <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>Email address<span style={{color: \"red\"}}>*</span></Form.Label>\n                      <Form.Control className={\n                          classnames(\"\", {invalid: errors.email})} \n                          onChange={handleFormChange} \n                          name=\"email\" type=\"email\" \n                          placeholder=\"Enter email\" />\n                      <Form.Text className=\"text-muted\">\n                      We'll never share your email with anyone else.\n                      </Form.Text>\n                  </Form.Group>\n  \n                  <Form.Group controlId=\"formBasicPassword\">\n                      <Form.Label>Password<span style={{color: \"red\"}}>*</span></Form.Label>\n                      <Form.Control className={\n                          classnames(\"\", {invalid: errors.email})} \n                          onChange={handleFormChange} \n                          name=\"password\" type=\"password\" \n                          placeholder=\"Password\" />\n                  </Form.Group>\n                  <Form.Group controlId=\"formBasicPassword\">\n                      <Form.Label>Confirm Password<span style={{color: \"red\"}}>*</span></Form.Label>\n                      <Form.Control className={\n                          classnames(\"\", {invalid: errors.email})} \n                          onChange={handleFormChange} \n                          name=\"password2\" type=\"password\" \n                          placeholder=\"Confirm Password\" />\n                  </Form.Group>\n  \n                  <Form.Row>\n                      <Button variant=\"primary\" type=\"submit\">\n                          Submit\n                      </Button>\n                      <Form.Text style={{paddingLeft: 10}} className=\"text-muted\">\n                          Already have an account ? <Link to=\"/login\">Login</Link> \n                      </Form.Text>\n                  </Form.Row>\n              </Form>\n        </Container>\n      );\n}\n\nRegister.propsTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth,\n        errors: state.errors\n    }\n}\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register))","import React, { useState } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Link, withRouter } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux'\nimport { loginUser } from '../../actions/authActions'\n\nconst Login = (props) => {\n    const [loginForm, setLoginForm] = useState({\n        email: \"\",\n        password: \"\",\n        errors: {}\n    })\n\n    useEffect(() => {\n        if (props.auth.isAuthenticated) {\n            props.history.push('/products');\n        }\n    }, [props])\n\n    const handleFormChange = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        setLoginForm({\n            ...loginForm,\n            [name]: value\n        })\n    };\n\n    const handleFormSubmit = e => {\n        e.preventDefault();\n        const loginUser = {\n            email: loginForm.email,\n            password: loginForm.password\n        }\n\n        props.loginUser(loginUser, props.history)\n    }\n\n    const { errors } = loginForm;\n   \n    return (\n        <Container>\n            <h1 style={{marginTop: 20, textAlign: 'center'}}>Login</h1>\n            <Form style={{\n                        marginTop: 20,\n                        padding: 20,\n                        borderRadius: 10,\n                        border: '1px solid gray'\n                    }}\n                onSubmit={handleFormSubmit}\n            >\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address<span style={{color: \"red\"}}>*</span></Form.Label>\n                    <Form.Control className={\n                            classnames(\"\", {\n                                invalid: errors.email || errors.emailnotfound\n                            })}\n                            onChange={handleFormChange} name=\"email\" type=\"email\" placeholder=\"Enter email\" />\n                    <span className=\"red-text\">\n                        {errors.email}\n                        {errors.emailnotfound}\n                    </span>\n                    <Form.Text className=\"text-muted\">\n                        We'll never share your email with anyone else.\n                    </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password<span style={{color: \"red\"}}>*</span></Form.Label>\n                    <Form.Control \n                        className={classnames(\"\", {\n                            invalid: errors.password || errors.passwordincorrect\n                        })}\n                        onChange={handleFormChange} name=\"password\" type=\"password\" placeholder=\"Password\" />\n                    <span className=\"red-text\">\n                        {errors.password}\n                        {errors.passwordincorrect}\n                    </span>\n                </Form.Group>\n\n                <Form.Row>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                    <Form.Text style={{paddingLeft: 10}} className=\"text-muted\">\n                        Don't have an account ? <Link to=\"/register\">Register</Link> \n                    </Form.Text>\n                </Form.Row>\n            </Form>\n        </Container>\n    );\n}\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth,\n        errors: state.errors\n    }\n}\n\nexport default connect(mapStateToProps, { loginUser })(withRouter(Login))","import {\n    SET_CURRENT_USER,\n    USER_LOADING,\n} from '../actions/types';\n\nconst isEmpty = require('is-empty');\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function( state = initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        case USER_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default:\n            return state;   \n    }\n}","import { GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function(state = initialState, action) {\n    switch(action.types) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport authReducer from './authReducers';\nimport errorReducer from './errorReducers';\n\nexport default combineReducers({\n    auth: authReducer,\n    errors: errorReducer\n})","import {\n    createStore,\n    applyMiddleware,\n} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(...middleware)\n);\n\nexport default store;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link\n} from \"react-router-dom\";\nimport ReactNotification from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\nimport './App.css';\nimport Home from './components/Home'\nimport ProductsPage from './containers/ProductsPage'\nimport MyNavbar from \"./components/Navbar\";\nimport AddProductsPage from './containers/AddProductsPage'\nimport SalesPage from \"./containers/SalesPage\";\nimport EditProductsPage from \"./containers/EditProductsPage\";\nimport AddSalesPage from \"./containers/AddSalesPage\";\nimport EditSalesPage from './containers/EditSalesPage';\nimport PurchasesPage from './containers/PurchasesPage'\nimport AddPurchasesPage from \"./containers/AddPurchasesPage\";\nimport EditPurchasesPage from \"./containers/EditPurchasesPage\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport { Provider } from 'react-redux'\nimport store from './store';\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n\n  // Set User isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // To get in milliseconds\n\n  if (decoded.exp < currentTime) {\n    // Logout User\n    store.dispatch(logoutUser());\n\n\n    // Redirect User to login\n    window.location.href = \"./login\"\n  }\n\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <MyNavbar />\n      <ReactNotification />\n      <Router>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Home} />\n          <Route exact path=\"/products\">\n            <ProductsPage />\n          </Route>\n          <Route path=\"/products/addnew\">\n            <AddProductsPage />\n          </Route>\n          <Route path=\"/products/:productId\">\n            <EditProductsPage />\n          </Route>\n          <Route exact path=\"/sales\">\n            <SalesPage />\n          </Route>\n          <Route path=\"/sales/addnew\">\n            <AddSalesPage />\n          </Route>\n          <Route path=\"/sales/:saleId\">\n            <EditSalesPage />\n          </Route>\n          <Route exact path=\"/purchases\">\n            <PurchasesPage />\n          </Route>\n          <Route path=\"/purchases/addnew\">\n            <AddPurchasesPage/>\n          </Route>\n          <Route path=\"/purchases/:saleId\">\n            <EditPurchasesPage />\n          </Route>\n          <Route exact path=\"/register\">\n            <Register />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}